/**
 *
 * @author Schubert Generated Code</br>
 * Date Created: </br>
 * @since  </br>
 build:   </p>
 *
 * code was generated by the Schubert System </br>
 * Schubert system Copyright - NewPortBay LLC copy_right_range</br>
 * The generated code is free to use by anyone</p>
 *
 *
 *
 */

app.controller('Authentication', ['$scope', '$rootScope', '$location', '$state', '$window', '$q', '$http', '$ionicPopup', 'RestURL', 'People_testId', 'Settings','OpenFB',
  function ($scope, $rootScope, $location, $state, $window, $q, $http, $ionicPopup, RestURL, People_testId, Settings,OpenFB) {
    var self = $scope;

    self.GPlusLogin = function () {
      self.login();
    };
	
	$scope.facebookLogin = function () {
		console.log("invoking adapter proc");
		   WL.Client.invokeProcedure({
	    		adapter : 'myAdapter',
	    		procedure : 'getGmapLatLng'
	    	}, {
	    		onSuccess : function(result) {
	    			console.log("success adapter proc");
	    			//Do something interesting with resulting JSON
	    			alert(result.invocationResult.interestingData);
	    		},
	    		onFailure: function(result){
	    			WL.SimpleDialog.show("Error","The service is temporarily not available. Please try again later.",[{text: "OK"}]);
	    		}
	    	});
	   
		 OpenFB.login('email').then(
                function () {                    
					OpenFB.get('/me').success(function (user) {
						$scope.showAlert("FB login succeeded"+user.id);							
					});					
                },
                function (msg) {
                    $scope.showAlert("OpenFB login failed"+msg);
                });
        };


	/*$scope.gpluslogin = function () {
			try{
			
			$window.plugins.googleplus.login(
				{},
				function (obj) {
				  $scope.showAlert("SUCCESS LOGIN: "+obj.email);
				  
				  //document.querySelector("#feedback").innerHTML = "Hi, " + obj.displayName + ", " + obj.email;
				},
				function (msg) {				
				  $scope.showAlert("ERROR: "+msg);
				}
			);
			}catch(d){
			console.log("ERRROR......."+d);
			}
	}*/
	
	
		$scope.showAlert = function(msg) {
		   var alertPopup = $ionicPopup.alert({
			  title: msg,
			  template: msg,
		   });
		   alertPopup.then(function(res) {
			  console.log('Thanks');
		   });

		};
    self.signIn = function () {
      console.log('Sign In...');

      WL.Client.invokeProcedure({
    		adapter : 'myAdapter',
    		procedure : 'getGmapLatLng'
    	}, {
    		onSuccess : function(result) {
    			//Do something interesting with resulting JSON
    			alert(result.invocationResult.interestingData);
    		},
    		onFailure: function(result){
    			WL.SimpleDialog.show("Error","The service is temporarily not available. Please try again later.",[{text: "OK"}]);
    		}
    	});
      var user = {
        "email": self.login.email,
        "passWord": self.login.password
      };

      $http.post(RestURL.baseURL + 'login/loginValidation/', user)
        .success(function (data) {
          if (data.responseSuccess === 'success') {
            $state.go('profile');
          } else {
            $ionicPopup.alert({
              title: 'Login Failed',
              template: 'Invalid email or password'
            });
          }
        })
        .error(function (error) {
          console.warn('Sign In failed!!!!!');
          console.warn(error);
        });
    };

    $http.get(RestURL.baseURL + 'organization/getAllOrg/')
      .success(function (response) {
        self.organizations = response;
        self.organizations = [
          {
            organisationName: 'Kappa Alpha Theta',
            id: 1,
            baseTemplateId: "3",
            organisationLocation: null,
            organisationPhoneNumber: null
          },
          {
            id: 2,
            baseTemplateId: "3",
            organisationName: 'Alpha Omicron Pi',
            organisationLocation: null,
            organisationPhoneNumber: null
          },
          {
            id: 3,
            baseTemplateId: "3",
            organisationName: 'Delta Tau Delta',
            organisationLocation: null,
            organisationPhoneNumber: null
          },
          {
            id: 4,
            baseTemplateId: "3",
            organisationName: 'Kappa Sigma',
            organisationLocation: null,
            organisationPhoneNumber: null
          }
        ];
      })
      .error(function (error) {
        console.warn(error);
      });

    self.emailAndPassword = function () {
      if (self.email && self.password) {
        Settings.global = {
          "email": self.email,
          "firstName": "User",
          "lastName": "Profile",
          "phoneNumber": 0,
          "passWord": self.password,
          "oldPassword": "12345",
          "userType": "CUSTOMER",
          "organisationId": {
            "baseTemplateId": "3"
          },
          "loggedIn": false
        };

        $state.go('organization');
      }
    };

    self.chooseOrganization = function () {
      if (self.organization) {
        // Settings.global.organisationId = self.organization;
        self.signUp();
      }
    };


    self.signUp = function () {
      Settings.global.loggedIn = true;
      $http.post(RestURL.baseURL + 'signup/create/', Settings.global)
        .success(function (data) {
          console.log('Account Created');
          console.log(data);

          $state.go('profile');
        })
        .error(function (error) {
          console.log('Sign Up failed');
          console.warn(error);
        });
    };

    self.go = function (url) {
      $state.go(url);
    };

  }]);
